/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Booking;

import Business.Airplanes;
import Business.TravelAgent;
import Business.airlinerclass;
import Business.flightclass;
import Interface.airliner.ManagefleetJPanel;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pranjal
 */
public class FlightsearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FlightsearchJPanel
     */
    private JPanel userprocesscontainer;
    private ArrayList<flightclass> temp;
    private TravelAgent ta;
    
    

    public FlightsearchJPanel(JPanel userprocesscontainer, ArrayList<flightclass> temp, TravelAgent ta) {
        initComponents();
        this.userprocesscontainer=userprocesscontainer;
        this.temp=temp;
        this.ta=ta;
        populateTable();
        
    }
    
       
        public void populateTable()
    {
    
    DefaultTableModel dtm=(DefaultTableModel)listofflightsavailabletable.getModel();
        dtm.setRowCount(0);
        
        for(flightclass flights:temp)
        {
                Object row[]=new Object[8];
                row[0]=flights;
                row[1]=flights.getFlightname();
                row[2]=flights.getSource();
                row[3]=flights.getDestination();
                row[4]=flights.getDeparture();
                row[5]=flights.getArrival();
                row[6]=flights.getFlightcharges();
                row[7]=flights.getDate();
                dtm.addRow(row);
               
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listofflightsavailabletable = new javax.swing.JTable();
        backbtn = new javax.swing.JButton();
        bookbtn = new javax.swing.JButton();

        jLabel1.setText("FLIGHTS     AVAILABLE");

        listofflightsavailabletable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Flight ID", "Flight Name", "Source", "Destination", "Departure", "Arrival", "Flight Charges", "Date"
            }
        ));
        jScrollPane1.setViewportView(listofflightsavailabletable);

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        bookbtn.setText("Book");
        bookbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(backbtn)
                        .addGap(214, 214, 214)
                        .addComponent(bookbtn)))
                .addContainerGap(363, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backbtn)
                    .addComponent(bookbtn))
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        userprocesscontainer.remove(this);
        CardLayout layout = (CardLayout)userprocesscontainer.getLayout();
        layout.previous(userprocesscontainer);
    }//GEN-LAST:event_backbtnActionPerformed

    private void bookbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookbtnActionPerformed
        // TODO add your handling code here:
        int getSelectedRow = listofflightsavailabletable.getSelectedRow();
        if(getSelectedRow <0){
            JOptionPane.showMessageDialog(null, "No row selected");
        }else{
            flightclass f = (flightclass) listofflightsavailabletable.getValueAt(getSelectedRow, 0);
        BookJPanel bookpanel = new BookJPanel(userprocesscontainer, f,ta);
        userprocesscontainer.add("BookJPanel", bookpanel);
        CardLayout layout = (CardLayout)userprocesscontainer.getLayout();
        layout.next(userprocesscontainer);
        }
    }//GEN-LAST:event_bookbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JButton bookbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listofflightsavailabletable;
    // End of variables declaration//GEN-END:variables
}
